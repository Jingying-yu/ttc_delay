---
title: "Choosing TTC Subway Service Provides the Most Time Stability during Weekday Rush-Hours"
subtitle: "Analysis on the Delay Magnitude of different TTC Services"
author: 
  - Sandy Yu
thanks: "Code and data are available at: https://github.com/Jingying-yu/ttc_delay.git"
date: today
date-format: long
abstract: "This paper analyzes the magnitude of TTC delays in 2023 based on service types. TTC delay data for buses, streetcars, and subways are obtained through Open Data Toronto data portal and data is used to visualize delay magnitude during different days and hours throughout the year. We find that, although TTC streetcars offered the least number of delays in 2023, riding on TTC subways provides the least average time of delay during weekday rush-hour traffic. Our results suggest that, if the time required to arrive at one's office is the same for all TTC service options, choosing subway over other services could provide the most time stability."
format: pdf
toc: true
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false
# load librarys and datasets
library(tidyverse)
library(dplyr)
library(lubridate)
library(knitr)
library(ggplot2)
library(hms)
library(patchwork)

bus_delay <- read.csv(here::here("inputs/data/cleaned_data/bus/bus_delay.csv"))
streetcar_delay <- read.csv(here::here("inputs/data/cleaned_data/streetcar/streetcar_delay.csv"))
subway_delay <- read.csv(here::here("inputs/data/cleaned_data/subway/subway_delay.csv"))
subway_delay_code <- read.csv(here::here("inputs/data/cleaned_data/subway_delay_code.csv"))

```


# Introduction



Analyses and findings in this paper are structured into several sections: @sec-data -- Data, @sec-results -- Results, and @sec-discussion -- Discussion. The Data section introduces the context of the datasets and examines all datasets and variables kept for analysis. The Result section focuses on visualizing and presenting the data results in Data section. The Discussion section further evaluate the implications behind the data results presented in the previous section, expands the topic beyond pure data, and touches on any weaknesses and next steps.


# Data {#sec-data}




## TTC Bus Delay



```{r}
#| label: tbl-bus-delay
#| tbl-cap: Sample of Cleaned TTC Bus Delay Dataset
#| echo: false

sample_bus_delay <- head(bus_delay, n = 3)

knitr::kable(sample_bus_delay, col.names = c("Date", "Line", "Time", "Day", "Location", "Cause of Delay", "Min Delayed", "Min Gap", "Direction", "Vehicle"), align = c("l","c", "c", "c", "c","c", "c", "c", "c","c"))
```


## TTC Streetcar Delay


```{r}
#| label: tbl-streetcar-delay
#| tbl-cap: Sample of Cleaned TTC Streetcar Delay Dataset
#| echo: false

sample_streetcar_delay <- head(streetcar_delay, n = 3)

knitr::kable(sample_streetcar_delay, col.names = c("Date", "Line", "Time", "Day", "Location", "Cause of Delay", "Min Delayed", "Min Gap", "Bound", "Vehicle"), align = c("l","c", "c", "c", "c","c", "c", "c", "c","c"))
```


## TTC Subway Delay

### Delay Code
```{r}
#| label: tbl-subway-code
#| tbl-cap: Sample of TTC Subway Delay Code
#| echo: false
#| message: false

sample_subway_delay_code <- head(subway_delay_code, n = 3)

knitr::kable(sample_subway_delay_code, col.names = c("Code", "Code Description"), align = c("c","c"))
```

### Delay Data
```{r}
#| label: tbl-subway-delay
#| tbl-cap: Sample of Cleaned TTC Subway Delay Dataset
#| echo: false
#| message: false

sample_subway_delay <- head(subway_delay, n = 3)

knitr::kable(sample_subway_delay, col.names = c("Date", "Time", "Day", "Location", "Delay Code", "Min Delayed", "Min Gap", "Bound", "Line", "Vehicle"), align = c("l","c", "c", "c", "c","c", "c", "c", "c","c"))
```

## TTC Delay Comparision



# Results {#sec-result}



## Highest Number of Total Delayed

```{r}
#| label: fig-total-delay
#| fig-cap: Visualization to show the TTC service that has the highest number of delays in year 2023
#| echo: false
#| message: false
#construct appropriate table for visualization
service_type <- c("bus", "streetcar", "subway")
num_delay <- c(nrow(bus_delay), nrow(streetcar_delay), nrow(subway_delay))

delay_count <- data.frame(service_type, num_delay)

# Generate the bar plot
ggplot(delay_count, aes(x = service_type, y = num_delay, fill = service_type)) +
  geom_bar(stat = "identity") + 
  geom_text(aes(label = paste0(num_delay, " delayed")), 
          vjust = 1, color = "white", size = 3.5, position = position_stack(vjust = 0.55)) +
  labs(title = "Number of Delays by Service Type", x = "Service Type", y = "Number of Delays", fill = "Service Type") +  # Label the axes
  theme_minimal()  # Apply a minimal theme
```

## Most Delayed during Weekday
Define Rush Hours:
  Rush Hours: 
  •	Morning Rush-Hour: Approximately 7:00 AM to 9:00 AM
	•	Evening Rush-Hour: Approximately 4:00 PM to 7:00 PM

Present Results During Rush Hours & at Off-Peak Hours

```{r}
#| echo: false
#| message: false
# Setup
weekday_bus_delay <- read.csv(here::here("inputs/data/cleaned_data/bus/bus_delay.csv"))
weekday_streetcar_delay <- read.csv(here::here("inputs/data/cleaned_data/streetcar/streetcar_delay.csv"))
weekday_subway_delay <- read.csv(here::here("inputs/data/cleaned_data/subway/subway_delay.csv"))
```


```{r}
#| label: fig-weekday
#| fig-cap: Visualization to show the total delayed time during weekdays in 2023
#| echo: false
#| message: false

service_type <- c("bus", "streetcar", "subway")
sum_delay_time <- c(sum(weekday_bus_delay$min_delay), sum(weekday_streetcar_delay$min_delay), sum(weekday_subway_delay$min_delay))
mean_delay_time <- c(mean(weekday_bus_delay$min_delay), mean(weekday_streetcar_delay$min_delay), mean(weekday_subway_delay$min_delay))


total_delay_time <- data.frame(service_type, as.numeric(sum_delay_time))
avg_delay_time <- data.frame(service_type, as.numeric(mean_delay_time))

# Generate the bar plot
sum_graph <- ggplot(total_delay_time, aes(x = service_type, y = sum_delay_time/60, fill = service_type)) +
  geom_bar(stat = "identity") + 
  # Add labels for total hours
  geom_text(aes(label = paste0(round(sum_delay_time / 60, 2), "hrs")), 
            vjust = 1, color = "black", size = 1.5, lineheight = 0.8, position = position_stack(vjust = 0.6)) +  
  labs(title = "Total Weekday Delay (hrs)", 
       x = "Service Type", y = "Total Delayed (hrs)", fill = "Service Type") +  # Label the axes
  theme_minimal() +
  theme(legend.position = "none", axis.text.x = element_text(size = 8))

avg_graph <- ggplot(avg_delay_time, aes(x = service_type, y = mean_delay_time, fill = service_type)) +
  geom_bar(stat = "identity") + 
  # Add labels for total hours
  geom_text(aes(label = paste0(round(mean_delay_time, 1), " mins")), 
            vjust = 1, color = "black", size = 2, position = position_stack(vjust = 0.6)) +  
  labs(title = "Average Weekday Delay (min)", 
       x = "Service Type", y = "Average Delay Time (min)", fill = "Service Type") +  # Label the axes
  theme_minimal() +
  theme(axis.text.x = element_text(size = 8))

sum_graph + avg_graph
```

## Most Delayed during Rush-Hours
```{r}
#| echo: false
#| message: false
# Setup
bus_delay_rush <- read.csv(here::here("inputs/data/cleaned_data/bus/bus_delay_rush.csv"))
streetcar_delay_rush <- read.csv(here::here("inputs/data/cleaned_data/streetcar/streetcar_delay_rush.csv"))
subway_delay_rush <- read.csv(here::here("inputs/data/cleaned_data/subway/subway_delay_rush.csv"))
```

```{r}
#| label: fig-rush-off
#| fig-cap: Barplot used to visualize the longest average delay time for different TTC services during Rush-Hours and Off-Peak Hours
#| echo: false
#| message: false

service_type <- c("bus", "streetcar", "subway")

morning_bus_rush <- bus_delay_rush |> filter(rush_type == "morning")
morning_streetcar_rush <- streetcar_delay_rush |> filter(rush_type == "morning")
morning_subway_rush <- subway_delay_rush |> filter(rush_type == "morning")
morning_mean_delay_rush <- c(mean(morning_bus_rush$min_delay), mean(morning_streetcar_rush$min_delay), mean(morning_subway_rush$min_delay))

#build morning rush dataset
morning_avg_delay_rush <- data.frame(service_type, as.numeric(morning_mean_delay_rush))

evening_bus_rush <- bus_delay_rush |> filter(rush_type == "evening")
evening_streetcar_rush <- streetcar_delay_rush |> filter(rush_type == "evening")
evening_subway_rush <- subway_delay_rush |> filter(rush_type == "evening")
evening_mean_delay_rush <- c(mean(evening_bus_rush$min_delay), mean(evening_streetcar_rush$min_delay), mean(evening_subway_rush$min_delay))

#build evening rush dataset
evening_avg_delay_rush <- data.frame(service_type, as.numeric(evening_mean_delay_rush))

morning_rush <- ggplot(morning_avg_delay_rush, aes(x = service_type, y = morning_mean_delay_rush, fill = service_type)) + geom_bar(stat = "identity") + 
  # Add labels for total hours
  geom_text(aes(label = paste0(round(mean_delay_time, 1), " mins")), 
            vjust = 1, color = "white", size = 2, position = position_stack(vjust = 0.6)) +  
  labs(title = "Morning Rush Average Delay", 
       x = "Service Type", y = "Average Delay Time (min)", fill = "Service Type") +  # Label the axes
  theme_minimal() +
  theme(legend.position = "none", axis.text.x = element_text(size = 8))

evening_rush <- ggplot(evening_avg_delay_rush, aes(x = service_type, y = evening_mean_delay_rush, fill = service_type)) + geom_bar(stat = "identity") + 
  # Add labels for total hours
  geom_text(aes(label = paste0(round(mean_delay_time, 1), " mins")), 
            vjust = 1, color = "white", size = 2, position = position_stack(vjust = 0.6)) +  
  labs(title = "Evening Rush Average Weekday Delay", 
       x = "Service Type", y = "Average Delay Time (min)", fill = "Service Type") +  # Label the axes
  theme_minimal() +
  theme(axis.text.x = element_text(size = 8))

morning_rush + evening_rush
```

## Most Popular Delay Reasons
- 1 table for all three services
- separate into rush & off-peak hours
```{r}

```

## Most Popular Delayed Vehicles
- 1 table for all three services
- separate into rush & off-peak hours
```{r}

```


# Discussion {#sec-discussion}

## TTC Service Prices {#sec-price}
- one-fare

## Correlation between Delay and Direction of Travel
- Financial District
- Midtown Direction

## TTC Service Amenities
- The PATH (for financial district)
- AC in Summer & Winter

## Errors in analysis, Limitations and Next Steps





# Conclusion {#sec-conclusion}






\newpage


# References


